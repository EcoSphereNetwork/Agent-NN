"use strict";(self.webpackChunkagent_nn_docs=self.webpackChunkagent_nn_docs||[]).push([[5863],{6264:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"architecture/overview","title":"Architecture Overview","description":"Agent-NN is being refactored into a Modular Control Plane. Instead of one monolithic agent process, separate services take care of orchestration, knowledge retrieval and task execution.","source":"@site/docs/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/Agent-NN/architecture/overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var t=r(4848),i=r(8453);const o={},c="Architecture Overview",a={},l=[{value:"Core Repository Folders",id:"core-repository-folders",level:2},{value:"MCP Components",id:"mcp-components",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"architecture-overview",children:"Architecture Overview"})}),"\n",(0,t.jsx)(n.p,{children:"Agent-NN is being refactored into a Modular Control Plane. Instead of one monolithic agent process, separate services take care of orchestration, knowledge retrieval and task execution."}),"\n",(0,t.jsx)(n.h2,{id:"core-repository-folders",children:"Core Repository Folders"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"agents/"})," \u2013 legacy agent implementations (will evolve into worker services)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"llm_models/"})," \u2013 wrappers for various LLM backends"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"managers/"})," \u2013 utilities for model and agent management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"datastores/"})," \u2013 vector store and agent specific databases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"api/"})," \u2013 FastAPI endpoints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cli/"})," \u2013 command line interface utilities"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"mcp-components",children:"MCP Components"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Task-Dispatcher"})," \u2013 replaces the Supervisor and delegates tasks to workers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agent Registry"})," \u2013 stores available agent services and metadata"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session Manager"})," \u2013 keeps conversation state centrally"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Worker Services"})," \u2013 domain specific executors running in their own processes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vector Store Service"})," \u2013 provides semantic search capabilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LLM Gateway"})," \u2013 unified interface to LLM providers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Manager Service"})," \u2013 handles user accounts and tokens"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For an overview of the interaction between these services see ",(0,t.jsx)(n.code,{children:"overview_mcp.md"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);