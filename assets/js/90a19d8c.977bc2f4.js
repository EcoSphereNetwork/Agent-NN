"use strict";(self.webpackChunkagent_nn_docs=self.webpackChunkagent_nn_docs||[]).push([[8726],{3023:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var s=i(3696);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}},7578:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"integrations/openhands_workflows","title":"OpenHands Workflows in FlowiseAI","description":"Diese Anleitung beschreibt die bereitgestellten Flowise-Workflows unter integrations/flowise-agentnn. Sie erlauben es, mehrere OpenHands-Agenten parallel anzusteuern. Jede JSON-Datei steht f\xfcr ein eigenes Szenario.","source":"@site/docs/integrations/openhands_workflows.md","sourceDirName":"integrations","slug":"/integrations/openhands_workflows","permalink":"/Agent-NN/integrations/openhands_workflows","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=i(2540),l=i(3023);const t={},d="OpenHands Workflows in FlowiseAI",o={},a=[{value:"Dateien",id:"dateien",level:2},{value:"Aufbau der Workflows",id:"aufbau-der-workflows",level:2},{value:"Beispiel f\xfcr einen Request-Node",id:"beispiel-f\xfcr-einen-request-node",level:3},{value:"Szenarien",id:"szenarien",level:2},{value:"Standard-Team (openhands.json)",id:"standard-team-openhandsjson",level:3},{value:"Linux-Distribution (openhands_linux.json)",id:"linux-distribution-openhands_linuxjson",level:3},{value:"Mobile Apps (openhands_app.json)",id:"mobile-apps-openhands_appjson",level:3},{value:"Neuronale Netze (openhands_nn.json)",id:"neuronale-netze-openhands_nnjson",level:3},{value:"ML- &amp; DL-Algorithmen (openhands_mldl.json)",id:"ml---dl-algorithmen-openhands_mldljson",level:3},{value:"Verwendung",id:"verwendung",level:2},{value:"Minimaler Beispiel-Flow",id:"minimaler-beispiel-flow",level:2},{value:"Tipps",id:"tipps",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"openhands-workflows-in-flowiseai",children:"OpenHands Workflows in FlowiseAI"})}),"\n",(0,r.jsxs)(n.p,{children:["Diese Anleitung beschreibt die bereitgestellten Flowise-Workflows unter ",(0,r.jsx)(n.code,{children:"integrations/flowise-agentnn"}),". Sie erlauben es, mehrere OpenHands-Agenten parallel anzusteuern. Jede JSON-Datei steht f\xfcr ein eigenes Szenario."]}),"\n",(0,r.jsx)(n.h2,{id:"dateien",children:"Dateien"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openhands.json"})," \u2013 Standard-Workflow f\xfcr ein 16-k\xf6pfiges Entwicklungsteam."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openhands_linux.json"})," \u2013 Variante f\xfcr Linux-Distributionen (Kernel, Packages usw.)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openhands_app.json"})," \u2013 Variante f\xfcr mobile Apps (Android/iOS)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openhands_nn.json"})," \u2013 Team f\xfcr neuronale Netze (Ports 3031\u20133040)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openhands_mldl.json"})," \u2013 Team f\xfcr ML- & DL-Algorithmen (Ports 3041\u20133050)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sample_flow.json"})," \u2013 Minimalbeispiel zum Testen der Komponente ",(0,r.jsx)(n.code,{children:"AgentNN"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Alle Workflows besitzen denselben Aufbau und unterscheiden sich haupts\xe4chlich bei den Agentennamen, Ports und Tokens. Die Dateien lassen sich direkt in der Flowise-UI importieren."}),"\n",(0,r.jsx)(n.h2,{id:"aufbau-der-workflows",children:"Aufbau der Workflows"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start-Formular"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Das Start-Node sammelt die Benutzeraufgabe (",(0,r.jsx)(n.code,{children:"task"}),") und l\xe4sst mehrere Agenten ausw\xe4hlen."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Variablen setzen"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ein ",(0,r.jsx)(n.code,{children:"SetVariable"}),"-Node speichert den Text der Aufgabe."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bedingungspr\xfcfungen"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["F\xfcr jeden Agenten existiert ein ",(0,r.jsx)(n.code,{children:"IfElse"}),"-Node. Er pr\xfcft, ob der Agent ausgew\xe4hlt wurde."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API-Aufruf"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Bei Erfolg verzweigt der Flow zu einem ",(0,r.jsx)(n.code,{children:"HttpRequest"}),"-Node. Dort wird mit ",(0,r.jsx)(n.code,{children:"POST /api/conversations"})," eine neue Konversation beim jeweiligen OpenHands-Agent gestartet."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conversation-ID speichern"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Antwort enth\xe4lt eine ",(0,r.jsx)(n.code,{children:"conversation_id"}),", die per ",(0,r.jsx)(n.code,{children:"SetVariable"})," in der Flow-Variable gesichert wird."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trajectory abrufen"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Anschlie\xdfend f\xfchrt ein weiterer ",(0,r.jsx)(n.code,{children:"HttpRequest"})," ein ",(0,r.jsx)(n.code,{children:"GET /api/trajectory"})," aus. Die URL enth\xe4lt die gespeicherte ID. So l\xe4sst sich der Fortschritt des Agenten abrufen."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"beispiel-f\xfcr-einen-request-node",children:"Beispiel f\xfcr einen Request-Node"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "request_0_init",\n  "label": "POST /api/conversations (Frontend Engineer)",\n  "name": "httpRequest",\n  "inputs": {\n    "method": "POST",\n    "url": "http://localhost:3001/api/conversations",\n    "headers": "{\\"Authorization\\": \\"Bearer {{secrets.TOKEN_FRONTEND}}\\"}",\n    "body": "{\\"initial_user_msg\\": \\"{{ $flow.state.task }}\\"}"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Dieser Knoten sendet die eingegebene Aufgabe an den Frontend-Agenten und speichert anschlie\xdfend die Antwortdaten."}),"\n",(0,r.jsx)(n.h2,{id:"szenarien",children:"Szenarien"}),"\n",(0,r.jsx)(n.h3,{id:"standard-team-openhandsjson",children:"Standard-Team (openhands.json)"}),"\n",(0,r.jsx)(n.p,{children:"Enth\xe4lt Rollen wie Frontend Engineer, Backend Engineer, QA Tester, Security Analyst und weitere Spezialisten. Die Ports reichen von 3001 bis 3010."}),"\n",(0,r.jsx)(n.h3,{id:"linux-distribution-openhands_linuxjson",children:"Linux-Distribution (openhands_linux.json)"}),"\n",(0,r.jsx)(n.p,{children:"Richtet sich an ein Linux-Team mit Rollen wie Kernel Engineer, Package Maintainer oder System Services Developer. Die Ports beginnen bei 3021."}),"\n",(0,r.jsx)(n.h3,{id:"mobile-apps-openhands_appjson",children:"Mobile Apps (openhands_app.json)"}),"\n",(0,r.jsx)(n.p,{children:"F\xfcr mobile Projekte: Android App DevOps, iOS App DevOps usw. Die Ports beginnen bei 3011."}),"\n",(0,r.jsx)(n.h3,{id:"neuronale-netze-openhands_nnjson",children:"Neuronale Netze (openhands_nn.json)"}),"\n",(0,r.jsx)(n.p,{children:"Dieses Team entwickelt Modelle f\xfcr Agent\u2011NN. Die Ports reichen von 3031 bis 3040."}),"\n",(0,r.jsx)(n.h3,{id:"ml---dl-algorithmen-openhands_mldljson",children:"ML- & DL-Algorithmen (openhands_mldl.json)"}),"\n",(0,r.jsx)(n.p,{children:"Enth\xe4lt zehn Spezialisten f\xfcr neue Lernverfahren. Die Ports reichen von 3041 bis 3050."}),"\n",(0,r.jsx)(n.h2,{id:"verwendung",children:"Verwendung"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\xd6ffne Flowise und w\xe4hle ",(0,r.jsx)(n.strong,{children:"Import Flow"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Lade eine der JSON-Dateien hoch."}),"\n",(0,r.jsxs)(n.li,{children:["Pr\xfcfe die Ports und API-Tokens in den ",(0,r.jsx)(n.code,{children:"HttpRequest"}),"-Nodes. Passe sie bei Bedarf an."]}),"\n",(0,r.jsx)(n.li,{children:"Starte den Flow und gib eine Aufgabe sowie die gew\xfcnschten Agenten an."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"minimaler-beispiel-flow",children:"Minimaler Beispiel-Flow"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"sample_flow.json"})," demonstriert lediglich den Aufruf der Komponente ",(0,r.jsx)(n.code,{children:"AgentNN"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "nodes": [\n    {"id": "start", "type": "input"},\n    {"id": "agentnn", "type": "AgentNN", "properties": {"endpoint": "http://localhost:8000"}},\n    {"id": "output", "type": "output"}\n  ],\n  "edges": [\n    {"source": "start", "target": "agentnn"},\n    {"source": "agentnn", "target": "output"}\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Damit kann gepr\xfcft werden, ob die Verbindung zu Agent-NN funktioniert."}),"\n",(0,r.jsx)(n.h2,{id:"tipps",children:"Tipps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Die Workflows sind als Vorlage gedacht. Du kannst weitere Agenten hinzuf\xfcgen oder \xfcberfl\xfcssige entfernen."}),"\n",(0,r.jsxs)(n.li,{children:["Beachte, dass ",(0,r.jsx)(n.code,{children:"npm install"})," und ",(0,r.jsx)(n.code,{children:"npx tsc"})," im Ordner ",(0,r.jsx)(n.code,{children:"integrations/flowise-agentnn"})," ausgef\xfchrt wurden, bevor die Komponente genutzt wird."]}),"\n",(0,r.jsx)(n.li,{children:"F\xfcr Offline-Umgebungen lassen sich die Endpunkte leicht an interne Hostnamen anpassen."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);