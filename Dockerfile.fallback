FROM python:3.11-slim AS builder

WORKDIR /app

# install build dependencies and network tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and try to install with retries
COPY requirements.txt requirements-light.txt ./

# Try full requirements first, fallback to light version
RUN pip install --no-cache-dir --upgrade pip && \
    (pip install --no-cache-dir --retries 5 --timeout 2000 -r requirements.txt uvicorn[standard] || \
     pip install --no-cache-dir --retries 3 --timeout 1000 -r requirements-light.txt uvicorn[standard]) && \
    # Install torch separately with CPU-only version if the full version failed
    (python -c "import torch" || pip install --no-cache-dir torch==2.5.1+cpu torchvision==0.20.1+cpu -f https://download.pytorch.org/whl/torch_stable.html)

# copy source
COPY . .

FROM python:3.11-slim

WORKDIR /app

# install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# copy dependencies from builder
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app

# ensure directories exist
RUN mkdir -p /app/logs /app/models

# Set PYTHONPATH to include the current directory so modules can be found
ENV PYTHONPATH=/app:$PYTHONPATH

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000
CMD ["uvicorn", "api.server:app", "--host", "0.0.0.0", "--port", "8000"]
