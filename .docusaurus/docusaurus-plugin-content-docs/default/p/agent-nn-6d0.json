{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Agent-NN Overview","href":"/Agent-NN/overview","docId":"overview","unlisted":false},{"type":"link","label":"Setup Guide","href":"/Agent-NN/setup","docId":"setup","unlisted":false},{"type":"category","label":"Installation & Setup","items":[{"type":"link","label":"Installation","href":"/Agent-NN/install","docId":"install","unlisted":false},{"type":"link","label":"Entwickler:innen-Setup","href":"/Agent-NN/developer_setup","docId":"developer_setup","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"CLI & API","items":[{"type":"link","label":"AgentNN CLI","href":"/Agent-NN/cli","docId":"cli","unlisted":false},{"type":"link","label":"API Einstieg","href":"/Agent-NN/api/","docId":"api/README","unlisted":false},{"type":"link","label":"API Reference","href":"/Agent-NN/api/api_reference","docId":"api/api_reference","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Agenten & Sessions","items":[{"type":"link","label":"API based deployment","href":"/Agent-NN/agent_deployment","docId":"agent_deployment","unlisted":false},{"type":"link","label":"Session Management","href":"/Agent-NN/sessions","docId":"sessions","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tool Integrationen","items":[{"type":"link","label":"n8n Integration","href":"/Agent-NN/integrations/n8n","docId":"integrations/n8n","unlisted":false},{"type":"link","label":"FlowiseAI Integration","href":"/Agent-NN/integrations/flowise","docId":"integrations/flowise","unlisted":false},{"type":"link","label":"Modell-Tracking mit MLflow","href":"/Agent-NN/development/model_tracking","docId":"development/model_tracking","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Configuration Reference","href":"/Agent-NN/config_reference","docId":"config_reference","unlisted":false},{"type":"category","label":"Entwicklung","items":[{"type":"link","label":"API- und CLI-Übersicht","href":"/Agent-NN/development/api_overview","docId":"development/api_overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Troubleshooting Guide","href":"/Agent-NN/troubleshooting/troubleshooting_guide","docId":"troubleshooting/troubleshooting_guide","unlisted":false}]},"docs":{"agent_deployment":{"id":"agent_deployment","title":"API based deployment","description":"Agents can be deployed via the MCP API. A simple client is implemented in","sidebar":"docs"},"api_reference":{"id":"api_reference","title":"API Reference","description":"The complete API specification for all microservices is available under docs/api/."},"api/advanced_endpoints":{"id":"api/advanced_endpoints","title":"Advanced API Endpoints","description":"This document describes the advanced API endpoints for model management, knowledge base operations, and system administration."},"api/agent_registry":{"id":"api/agent_registry","title":"Agent Registry API","description":"GET /agents"},"api/api_reference":{"id":"api/api_reference","title":"API Reference","description":"This document provides detailed information about the Agent-NN API endpoints.","sidebar":"docs"},"api/chat":{"id":"api/chat","title":"Chat API","description":"The API gateway exposes simple endpoints for chat interactions."},"api/dispatcher":{"id":"api/dispatcher","title":"Task Dispatcher API","description":"POST /task"},"api/errors":{"id":"api/errors","title":"Fehlercodes der MCP-API","description":"| Code | Beschreibung                          |"},"api/llm_gateway":{"id":"api/llm_gateway","title":"LLM Gateway API","description":"POST /generate – Send a prompt and receive generated text from the configured language model."},"api/openapi-overview":{"id":"api/openapi-overview","title":"OpenAPI Overview","description":"Version: v1.0.0-beta"},"api/plugin_agent":{"id":"api/plugin_agent","title":"Plugin Agent API","description":"The Plugin Agent executes registered tool plugins."},"api/README":{"id":"api/README","title":"API Einstieg","description":"Die REST-Schnittstellen der Agent-NN-Services sind in OpenAPI beschrieben. Die wichtigsten Endpunkte sind unter openapi/ dokumentiert.","sidebar":"docs"},"api/session_manager":{"id":"api/session_manager","title":"Session Manager API","description":"POST /session"},"api/vector_store":{"id":"api/vector_store","title":"Vector Store API","description":"POST /document – Add a document with optional id and text fields. Returns the stored document id."},"api/worker_services":{"id":"api/worker_services","title":"Worker Services API","description":"Each worker exposes /execute_task to perform a domain specific action via the LLM Gateway."},"architecture_overview":{"id":"architecture_overview","title":"Architecture Overview","description":"This document provides a short overview of the services composing the Agent-NN Modular Control Plane."},"architecture/access_control":{"id":"architecture/access_control","title":"Access Control Layer","description":"Phase 3.4 adds a basic authorization layer to Agent‑NN. Each agent receives a role and every action is checked against a role based permission map. The dispatcher loads the agent contract and calls is_authorized before a task is assigned. If the role is not allowed the task is blocked and an audit entry is written."},"architecture/agent_bus":{"id":"architecture/agent_bus","title":"Agent Bus","description":"The Agent Bus is a lightweight in-memory queue that allows agents to exchange"},"architecture/agent_evolution":{"id":"architecture/agent_evolution","title":"Agent Evolution","description":"Agents update their profile after processing tasks. The evolve_profile function merges feedback or LLM suggestions into the persistent AgentIdentity."},"architecture/agent_levels":{"id":"architecture/agent_levels","title":"Agent Levels","description":"Agents advance through predefined levels to unlock new abilities. Each level is"},"architecture/agent_memory":{"id":"architecture/agent_memory","title":"Agent Memory","description":"The session manager can persist past interactions for every session."},"architecture/agent_missions":{"id":"architecture/agent_missions","title":"Agent Missions","description":"Agent missions provide a structured, multi step objective for agents. Each mission"},"architecture/agent_profiles":{"id":"architecture/agent_profiles","title":"Agent Profiles","description":"Agent profiles store persistent information about every worker agent. They are saved as JSON files under agent_profiles/ and loaded when an agent starts."},"architecture/agent_teams":{"id":"architecture/agent_teams","title":"Agent Teams","description":"Agent teams allow multiple agents to collaborate on shared goals. Each team is"},"architecture/analysis":{"id":"architecture/analysis","title":"Architecture Analysis","description":"This file lists missing features and open tasks found during the code review. The list focuses on items required for the minimum viable product (MVP) as described in README.md and Roadmap.md."},"architecture/audit_logging":{"id":"architecture/audit_logging","title":"Audit Logging","description":"Das System schreibt alle sicherheitsrelevanten Aktionen in JSONL-Dateien unter audit/."},"architecture/coalitions":{"id":"architecture/coalitions","title":"Agent Coalitions","description":"Phase 2.6 introduces agent coalitions for distributed task solving. A coalition is stored as JSON under coalitions/ and represented by AgentCoalition."},"architecture/Code-Dokumentation":{"id":"architecture/Code-Dokumentation","title":"Detaillierte Code-Dokumentation: Multi-Agent-System","description":"Projektübersicht"},"architecture/decisions/phase5_phase6":{"id":"architecture/decisions/phase5_phase6","title":"Decision Log: Phase 5 & 6 Integration","description":"During the implementation of the advanced learning and federation layers we reused parts of the deprecated"},"architecture/delegation_model":{"id":"architecture/delegation_model","title":"Delegation Model","description":"Delegations allow agents to temporarily or permanently pass a role to trusted peers. Each DelegationGrant is stored under delegations/.jsonl and recorded in the profiles of both agents."},"architecture/dispatch_queue":{"id":"architecture/dispatch_queue","title":"Dispatch Queue","description":"The dispatcher keeps tasks in an in-memory queue. Each ModelContext contains"},"architecture/dynamic_roles":{"id":"architecture/dynamic_roles","title":"Dynamic Roles","description":"Phase 3.5 introduces flexible role management. Roles form a hierarchy and can be temporarily extended."},"architecture/extensibility":{"id":"architecture/extensibility","title":"MCP Extensibility","description":"The Modular Control Plane is designed to grow. New services can be added without disrupting existing ones. The LLM Gateway already exposes additional endpoints:"},"architecture/federation":{"id":"architecture/federation","title":"Federation Manager","description":"The Federation Manager coordinates tasks across multiple Agent-NN clusters. Nodes"},"architecture/feedback":{"id":"architecture/feedback","title":"Feedback System","description":"User feedback is stored in the session manager. Each feedback entry contains"},"architecture/feedback_loop":{"id":"architecture/feedback_loop","title":"Feedback Loop Architecture","description":"The feedback loop stores significant events for each agent to enable"},"architecture/governance":{"id":"architecture/governance","title":"Governance and Contracts","description":"Phase 3 introduces a governance layer for Agent‑NN. Each agent can be bound to"},"architecture/identity_and_signatures":{"id":"architecture/identity_and_signatures","title":"Identity and Signatures","description":"Agent-NN verwendet digitale Signaturen, um die Herkunft von Antworten"},"architecture/mcp_components":{"id":"architecture/mcp_components","title":"MCP Components","description":"- Task-Dispatcher: central orchestration service. Decides which worker should execute a task."},"architecture/mcp_dataflow":{"id":"architecture/mcp_dataflow","title":"MCP Data Flow","description":"1. A user sends a request via CLI or Web UI to the API Gateway."},"architecture/mcp_stabilisierung":{"id":"architecture/mcp_stabilisierung","title":"MCP Stabilisierung","description":"Diese Phase fokussiert sich auf Tests, Logging und ein lauffähiges Docker-Setup."},"architecture/multi_agent":{"id":"architecture/multi_agent","title":"Multi-Agent Execution","description":"Phase 2 introduces a coordination layer that allows several worker agents to collaborate on a single task. The dispatcher now supports three modes:"},"architecture/overview":{"id":"architecture/overview","title":"Architecture Overview","description":"Agent-NN is being refactored into a Modular Control Plane. Instead of one monolithic agent process, separate services take care of orchestration, knowledge retrieval and task execution."},"architecture/overview_mcp":{"id":"architecture/overview_mcp","title":"MCP Overview","description":"The Modular Control Plane architecture breaks Agent-NN into small services that communicate over defined APIs. This overview outlines the main building blocks."},"architecture/plugin_architecture":{"id":"architecture/plugin_architecture","title":"Plugin Architecture","description":"The plugin system enables dynamic extension of worker agents with new tools."},"architecture/privacy_model":{"id":"architecture/privacy_model","title":"Datenschutzmodell","description":"Dieses Dokument beschreibt die Zugriffsstufen und die Kontextredaktion im Agent-NN Framework."},"architecture/reputation_system":{"id":"architecture/reputation_system","title":"Reputation System","description":"Peer ratings provide a social signal for agent quality. A rating is stored as JSON lines under ratings/.jsonl using the AgentRating dataclass. It captures the score, optional feedback and context tags."},"architecture/resource_model":{"id":"architecture/resource_model","title":"Agent Resource Model","description":"The dispatcher now tracks economic metadata for each agent. AgentIdentity stores"},"architecture/role_capabilities":{"id":"architecture/role_capabilities","title":"Role Capabilities","description":"Each role now defines explicit resource limits. core/role_capabilities.py stores the mapping."},"architecture/skill_system":{"id":"architecture/skill_system","title":"Skill System","description":"The skill system introduces declarative abilities that can be certified for each agent."},"architecture/system_architecture":{"id":"architecture/system_architecture","title":"System Architecture","description":"The MCP version of Agent-NN is composed of several cooperating services. The following diagram illustrates the overall flow."},"architecture/token_budgeting":{"id":"architecture/token_budgeting","title":"Token Budgeting","description":"The dispatcher tracks token usage for each task and session. Every ModelContext carries optional fields taskvalue, maxtokens and token_spent. When a task exceeds its defined budget the dispatcher sets warning to \"budget exceeded\" and skips further processing. Token usage reported by worker agents is accumulated per session."},"architecture/training_paths":{"id":"architecture/training_paths","title":"Training Paths","description":"Training paths define how an agent can acquire a new skill. Each path specifies prerequisites, a training method and which agent may certify the result."},"architecture/trust_network":{"id":"architecture/trust_network","title":"Trust Network","description":"Agent recommendations create social trust circles. Each AgentRecommendation is stored under recommendations/.jsonl and updates the receiving profile."},"architecture/ÜberblickSystemarchitektur":{"id":"architecture/ÜberblickSystemarchitektur","title":"ÜberblickSystemarchitektur","description":"Nach der Analyse der Quellcode-Dateien erkenne ich ein umfangreiches Multi-Agent-System, das auf natürlicher Sprachverarbeitung und maschinellem Lernen basiert. Das System ist modular aufgebaut und ermöglicht die Erstellung, Verwaltung und Optimierung von verschiedenen spezialisierten Agenten, die für unterschiedliche Domänen und Aufgaben zuständig sind."},"architecture/voting_logic":{"id":"architecture/voting_logic","title":"Voting Logic","description":"The voting mode lets multiple worker agents propose answers which are then rated by one or more critic agents."},"BenutzerHandbuch/Benutzerhandbuch":{"id":"BenutzerHandbuch/Benutzerhandbuch","title":"Agent-NN: Benutzerhandbuch","description":"Inhaltsverzeichnis"},"BenutzerHandbuch/index":{"id":"BenutzerHandbuch/index","title":"Benutzerhandbuch","description":"Willkommen beim Agent-NN System. Diese Kurzanleitung hilft Ihnen beim Einstieg ohne technische Vorkenntnisse."},"BenutzerHandbuch/Marketing-Agent":{"id":"BenutzerHandbuch/Marketing-Agent","title":"Marketing-Agent","description":"Marketing-Agent"},"BenutzerHandbuch/smolitux-ui":{"id":"BenutzerHandbuch/smolitux-ui","title":"Benutzerhandbuch: Smolitux-UI für Agent-NN","description":"Dieses Benutzerhandbuch erklärt die Verwendung der Smolitux-UI für das Agent-NN-System."},"catalog":{"id":"catalog","title":"Agent Catalog","description":"Agent profiles can be stored as YAML files under agents/catalog/."},"CHANGELOG":{"id":"CHANGELOG","title":"Changelog","description":"All notable changes to this project are documented in this file."},"cli":{"id":"cli","title":"AgentNN CLI","description":"agentnn is the unified command line interface for all services of Agent‑NN.","sidebar":"docs"},"cli_dev":{"id":"cli_dev","title":"Developer Guide: Extending the CLI","description":"Dieses Dokument erklärt, wie neue Unterbefehle für agentnn erstellt werden."},"cli_quickstart":{"id":"cli_quickstart","title":"CLI Quickstart","description":"Diese Anleitung führt in wenigen Schritten von der Installation bis zur ersten ausgeführten Aufgabe."},"cli/cli_reference":{"id":"cli/cli_reference","title":"CLI Reference","description":"The Agent-NN Command Line Interface (CLI) provides a convenient way to interact with the system."},"cli/CLI-Dokumentation":{"id":"cli/CLI-Dokumentation","title":"Agent-NN Command Line Interface","description":"Inhaltsverzeichnis"},"config_reference":{"id":"config_reference","title":"Configuration Reference","description":"This document lists the environment variables used by Agent-NN. Values can be defined in a .env file and are loaded via pydantic-settings.","sidebar":"docs"},"context_map":{"id":"context_map","title":"Shared Context Map","description":"The context map visualises how sessions, agents and individual task results are connected."},"deployment":{"id":"deployment","title":"Deployment Guide","description":"This document explains how to run Agent-NN locally and in production."},"deployment/cloud":{"id":"deployment/cloud","title":"Cloud Deployment","description":"For production environments the application can be deployed to any Kubernetes cluster using the provided Helm chart."},"deployment/docker":{"id":"deployment/docker","title":"Docker Deployment","description":"For local development run:"},"deployment/kubernetes":{"id":"deployment/kubernetes","title":"Kubernetes Deployment","description":"Helm chart is located at deploy/k8s/helm/agent-nn."},"deployment/storage":{"id":"deployment/storage","title":"Persistente Speicherung","description":"Die Microservices speichern Daten standardmäßig im Verzeichnisstruktur unterhalb der in der .env definierten Pfade. Alle Verzeichnisse werden beim Start automatisch angelegt."},"dev_managers":{"id":"dev_managers","title":"Manager-Übersicht","description":"Dieser Abschnitt gibt eine kurze Übersicht über die wichtigsten Manager im Projekt."},"developer_setup":{"id":"developer_setup","title":"Entwickler:innen-Setup","description":"Dieses Projekt verwendet Poetry für das Dependency-Management und Packaging.","sidebar":"docs"},"development/api_overview":{"id":"development/api_overview","title":"API- und CLI-Übersicht","description":"Diese Datei fasst die aktuell vorhandenen Schnittstellen von Agent-NN zusammen.","sidebar":"docs"},"development/cicd":{"id":"development/cicd","title":"CI/CD Pipeline","description":"This document describes the Continuous Integration and Continuous Deployment (CI/CD) pipeline for Agent-NN."},"development/cli_usage":{"id":"development/cli_usage","title":"AgentNN CLI","description":"agentnn bietet verschiedene Unterbefehle zum Aufrufen der Services."},"development/contributing":{"id":"development/contributing","title":"Contributing to Agent-NN","description":"We love your input! We want to make contributing to Agent-NN as easy and transparent as possible, whether it's:"},"development/model_tracking":{"id":"development/model_tracking","title":"Modell-Tracking mit MLflow","description":"Dieses Dokument fasst die bestehende Nutzung von MLflow im Projekt zusammen und beschreibt die neuen Schnittstellen der SDK und CLI.","sidebar":"docs"},"development/nxlv-python":{"id":"development/nxlv-python","title":"Evaluierung @nxlv/python","description":"Das Paket @nxlv/python erweitert das Nx Build-System um Python-Unterstützung. Agent-NN verwendet jedoch keine Nx-Workspace-Struktur, sondern trennt Frontend und Backend konventionell."},"development/plugins":{"id":"development/plugins","title":"Service Plugins","description":"The MCP architecture will support pluggable service components. Planned plugin types include:"},"development/sdk_usage":{"id":"development/sdk_usage","title":"Developer SDK","description":"Das SDK ermöglicht einfachen Zugriff auf die Agent-NN-Services."},"development/services":{"id":"development/services","title":"Services Übersicht","description":"Die Modular Control Plane besteht aus mehreren eigenständigen Services. Jeder Service stellt eine kleine FastAPI-Anwendung bereit."},"development/setup":{"id":"development/setup","title":"Entwicklungssetup","description":"Dieses Dokument beschreibt, wie Sie eine lokale Entwicklungsumgebung für Agent-NN einrichten."},"development/smolitux-ui-dev":{"id":"development/smolitux-ui-dev","title":"Entwicklerdokumentation: Smolitux-UI für Agent-NN","description":"Diese Dokumentation richtet sich an Entwickler, die an der Smolitux-UI-Integration für das Agent-NN-System arbeiten möchten."},"errors":{"id":"errors","title":"Fehlerobjekte","description":"Alle Services geben Fehler im folgenden Format zurueck:"},"flowise_nodes":{"id":"flowise_nodes","title":"Flowise Nodes for Agent-NN","description":"Dieses Dokument listet Flowise-Komponenten, die Agent-NN bereitstellt. Jede Node kann in Flowise importiert werden und kommuniziert über HTTP mit dem jeweiligen Service."},"flowise_plugin":{"id":"flowise_plugin","title":"Flowise Plugin Bundle","description":"Dieses Dokument beschreibt, wie alle Agent‑NN Nodes als fertiges Flowise‑Plugin bereitgestellt werden."},"flowisehub_publish":{"id":"flowisehub_publish","title":"FlowiseHub Publishing Guide","description":"This document explains how to publish the Agent-NN Flowise plugin to FlowiseHub or any compatible registry."},"frontend_bridge":{"id":"frontend_bridge","title":"Frontend Bridge","description":"This document describes how the agent-ui frontend connects to the Agent-NN backend services."},"frontend_ux_checklist":{"id":"frontend_ux_checklist","title":"Frontend UX Checklist","description":"This checklist summarises user experience and accessibility tests for the consolidated UI in frontend/agent-ui."},"frontend/overview":{"id":"frontend/overview","title":"Frontend Overview","description":"The web interface is built with React and provides a simple chat page for"},"governance/goals":{"id":"governance/goals","title":"Governance Goals","description":"The Agent-NN modernization embraces the following principles:"},"governance/maintenance":{"id":"governance/maintenance","title":"Maintenance Guidelines","description":"Rollen"},"governance/release_policy":{"id":"governance/release_policy","title":"Release Policy","description":"The MCP services follow semantic versioning. Public APIs are considered stable within a major version."},"index":{"id":"index","title":"Agent-NN Documentation","description":"Welcome to the Agent-NN documentation! This documentation will help you understand and use our multi-agent system with neural network-based task routing."},"install":{"id":"install","title":"Installation","description":"From Source","sidebar":"docs"},"integrations/flowise":{"id":"integrations/flowise","title":"FlowiseAI Integration","description":"FlowiseAI bietet eine grafische Oberfläche zum Erstellen von Chatbot‑Flows. Agent‑NN lässt sich sowohl als Quelle für Antworten als auch als externer Aufrufer nutzen. Mit Version v1.0.3 gilt die Flowise‑Integration als stabil.","sidebar":"docs"},"integrations/full_integration_plan":{"id":"integrations/full_integration_plan","title":"Plan zur vollständigen Integration von Agent-NN mit n8n und FlowiseAI","description":"Dieser Plan beschreibt die nötigen Schritte, um Agent‑NN in beide Richtungen mit n8n und FlowiseAI zu koppeln. Ziel ist es, Workflows zwischen den Systemen auszutauschen und Agent‑NN sowohl als Quelle als auch als Ziel von Automatisierungsflüssen zu verwenden."},"integrations/index":{"id":"integrations/index","title":"Integrations","description":"Dieses Kapitel beschreibt, wie Agent-NN mit externen Tools gekoppelt werden kann. Neben der Smolitux-UI stehen Erweiterungen für n8n und FlowiseAI bereit. Beide Systeme können Agent-NN aufrufen und umgekehrt von Agent-NN aus gesteuert werden. Die Plugins unter plugins/ bringen dazu konfigurierbare HTTP-Parameter mit."},"integrations/langchain_bridge":{"id":"integrations/langchain_bridge","title":"LangChain MCP Bridge","description":"MCPChatWrapper exposes the MCP server as a LangChain compatible LLM. It wraps"},"integrations/n8n":{"id":"integrations/n8n","title":"n8n Integration","description":"Die Workflow-Plattform n8n kann Agent‑NN sowohl aufrufen als auch von Agent‑NN aus gestartet werden. Eigene Nodes erleichtern die Kommunikation.","sidebar":"docs"},"integrations/openhands_workflows":{"id":"integrations/openhands_workflows","title":"OpenHands Workflows in FlowiseAI","description":"Diese Anleitung beschreibt die bereitgestellten Flowise-Workflows unter integrations/flowise-agentnn. Sie erlauben es, mehrere OpenHands-Agenten parallel anzusteuern. Jede JSON-Datei steht für ein eigenes Szenario."},"integrations/OpenHands-Flowise-Flow":{"id":"integrations/OpenHands-Flowise-Flow","title":"Flowise-Flow für ein 16‑Agenten-Team mit OpenHands","description":"Wir erstellen einen Flowise-Workflow, der 16 lokal laufende OpenHands-Agenten (Ports 3001–3016) als Spezialisten ansteuert. Neben den bisherigen Rollen wie „Frontend“, „Backend“ oder „Dokumentation“ sind zusätzliche Experten vertreten. Dazu zählen Android‑ und iOS‑Entwicklung, plattformübergreifende App-DevOps, Spezialisten für neuronale Netze, allgemeines ML/DL sowie LLM‑DevOps."},"llm_provider_overview":{"id":"llm_provider_overview","title":"LLM Provider Overview","description":"The gateway selects language model providers based on llm_config.yaml."},"maintenance":{"id":"maintenance","title":"Maintenance Guide","description":"This document outlines recommended maintenance and security practices for running Agent-NN in production."},"mcp":{"id":"mcp","title":"Model Context Protocol Integration","description":"Agent-NN exposes a minimal implementation of the Model Context Protocol (MCP)"},"metrics_reference":{"id":"metrics_reference","title":"Metrics Reference","description":"The following Prometheus metrics are exported by Agent-NN services."},"metrics_snapshot":{"id":"metrics_snapshot","title":"Metrics Snapshot","description":"Stand: 2025-06-23"},"migration_status":{"id":"migration_status","title":"Migration Status","description":"Altmodul → Neues Modul / Status"},"models":{"id":"models","title":"Modellübersicht","description":"Die neuronalen Modelle befinden sich im Ordner nn_models/."},"observability/monitoring":{"id":"observability/monitoring","title":"Monitoring und Logging","description":"Dieses Dokument beschreibt die grundlegende Observability des Agent-NN Systems."},"orchestrator":{"id":"orchestrator","title":"Session Orchestrator","description":"The session orchestrator manages multiple parallel sessions. It can"},"overview":{"id":"overview","title":"Agent-NN Overview","description":"Agent-NN verbindet Agentensteuerung mit neuronalen Netzen und stellt sowohl eine CLI als auch ein SDK bereit. Die Modular Control Plane (MCP) besteht aus mehreren Microservices, die gemeinsam Aufgaben verarbeiten.","sidebar":"docs"},"plugins":{"id":"plugins","title":"Plugin System","description":"Agent-NN supports optional service and tool plugins. Plugins live in the top level"},"prompting":{"id":"prompting","title":"Prompt Refinement","description":"The prompt_refiner module provides simple utilities to optimise prompts before they are sent to an agent or language model."},"realtime":{"id":"realtime","title":"Real-time Session Events","description":"agentnn.mcp.mcp_ws exposes a WebSocket endpoint for live updates. Connect to"},"reasoning":{"id":"reasoning","title":"Context Reasoning","description":"The reasoning framework collects partial results from multiple agents and derives"},"release_checklist":{"id":"release_checklist","title":"Release Checklist","description":"Diese Liste hilft dabei, eine neue Version von Agent-NN vorzubereiten und zu veröffentlichen."},"RELEASE_NOTES":{"id":"RELEASE_NOTES","title":"Release Notes v1.0.3","description":"Dieses Release finalisiert die Flowise-Export-Funktion und erweitert die Dokumentation."},"releases/hotfix_template":{"id":"releases/hotfix_template","title":"Hotfix Template","description":"1. Beschreibung des Problems"},"releases/v1.0.0-beta":{"id":"releases/v1.0.0-beta","title":"v1.0.0-beta","description":"Erste Beta-Version von Agent-NN. Diese Version vereint alle Kernservices der Modular Control Plane und bietet eine konsolidierte Schnittstelle für Entwickler."},"releases/v1.0.2":{"id":"releases/v1.0.2","title":"v1.0.2 Stable Release","description":"Die Flowise-Integration ist jetzt produktionsreif. Quickstart-Anleitungen, Beispiel-Flows und Screenshots sind aktualisiert. Fehlerbehandlung und Authentifizierung wurden getestet. Bekannte Probleme mit optionalen Modulen sind dokumentiert. Weitere Informationen finden sich im Changelog."},"releases/v1.0.3":{"id":"releases/v1.0.3","title":"v1.0.3 Stable Release","description":"- Flowise-Export über GET /agents/?format=flowise finalisiert"},"roadmap":{"id":"roadmap","title":"Agent-NN Roadmap","description":"Diese Datei fasst die wichtigsten Schritte der Entwicklungsplanung zusammen."},"roles":{"id":"roles","title":"Agent Roles","description":"Agent-NN uses simple role labels to control agent behaviour. Every agent profile"},"scripts":{"id":"scripts","title":"Script Übersicht","description":"Dieser Abschnitt beschreibt die wichtigsten Shell-Skripte unter scripts/."},"sdk/python":{"id":"sdk/python","title":"Python SDK","description":"Das Python SDK erleichtert die Integration externer Anwendungen mit dem Task-Dispatcher-Service."},"security/authentication":{"id":"security/authentication","title":"API Authentication","description":"The API gateway can optionally enforce authentication. When enabled, clients must send an X-API-Key header with every request. The expected key is defined via the environment variable APIGATEWAYKEY."},"security/hardening":{"id":"security/hardening","title":"Security Hardening","description":"Dieses Dokument beschreibt empfohlene Sicherheitsmaßnahmen für die Agent-NN-Services."},"security/mcp_security":{"id":"security/mcp_security","title":"MCP Server Security","description":"The MCP server can optionally protect its routes with API keys or bearer tokens."},"security/scopes":{"id":"security/scopes","title":"API Scopes","description":"Access to the gateway is controlled via scopes inside JWT tokens or associated with an API key."},"service_audit":{"id":"service_audit","title":"Service Audit","description":"This document lists available services and their current status."},"sessions":{"id":"sessions","title":"Session Management","description":"The session pool enables multiple agents to collaborate within the same dialogue.","sidebar":"docs"},"setup":{"id":"setup","title":"Setup Guide","description":"Dieser Leitfaden beschreibt die Installation von Agent-NN Schritt für Schritt.","sidebar":"docs"},"smolitux-ui-integration":{"id":"smolitux-ui-integration","title":"Smolitux-UI Integration für Agent-NN","description":"Diese Dokumentation beschreibt die Integration der Smolitux-UI-Bibliothek mit dem Agent-NN-System."},"snapshots":{"id":"snapshots","title":"Session Snapshots","description":"Snapshots store the full conversation context and metadata for a session. They"},"test_strategy":{"id":"test_strategy","title":"Test Strategy","description":"This project relies on pytest and pytest-cov for backend tests. Tests are grouped into"},"tools":{"id":"tools","title":"Builtin Tools and Models","description":"Agent-NN ships with a small set of builtin tools. They can be managed via the agentnn tools commands."},"troubleshooting/troubleshooting_guide":{"id":"troubleshooting/troubleshooting_guide","title":"Troubleshooting Guide","description":"This guide helps diagnose and resolve common issues in the Agent-NN system.","sidebar":"docs"},"ui_migration_audit":{"id":"ui_migration_audit","title":"UI Migration Audit","description":"This document tracks legacy UI components and their migration status to the consolidated React interface under frontend/agent-ui."},"use-cases/adaptive_agent_behavior":{"id":"use-cases/adaptive_agent_behavior","title":"Adaptive Agent Behavior","description":"Agents can modify their profile based on accumulated feedback. For example, a"},"use-cases/adaptive_agents":{"id":"use-cases/adaptive_agents","title":"Adaptive Agents","description":"With profiles each agent can record its own history and gradually adapt skills. A critic agent for example stores the average deviation of its ratings. Over time the system can analyse this metric and adjust the harshness or suggest new training data."},"use-cases/adaptive_self_optimizing_agents":{"id":"use-cases/adaptive_self_optimizing_agents","title":"Adaptive Self-Optimizing Agents","description":"Agents can refine their behaviour over time. A critic that receives many complaints will automatically increase its precision trait or learn new skills suggested by a model."},"use-cases/budget_constrained_execution":{"id":"use-cases/budget_constrained_execution","title":"Budget constrained execution","description":"This scenario demonstrates how a user can limit the number of tokens consumed. Tasks are submitted with --value and --max-tokens parameters. The dispatcher stops further agent calls once the allocated budget has been spent."},"use-cases/collaborative_responsibility":{"id":"use-cases/collaborative_responsibility","title":"Collaborative Responsibility","description":"Agents can delegate review or coordination duties to trusted peers. Example"},"use-cases/collective_learning":{"id":"use-cases/collective_learning","title":"Collective Learning","description":"Teams of agents can distribute training efforts and share insights. After a"},"use-cases/community_quality_feedback":{"id":"use-cases/community_quality_feedback","title":"Community Quality Feedback","description":"After completing a mission agents can rate each other to highlight accuracy or collaboration skills."},"use-cases/community_validation":{"id":"use-cases/community_validation","title":"Community Validation","description":"Some roles should be granted only after peer endorsement. Two or more agents can endorse a candidate using:"},"use-cases/contextual_interaction":{"id":"use-cases/contextual_interaction","title":"Contextual Interaction","description":"Agents can reference earlier results through the memory log. In a"},"use-cases/contract_enforced_execution":{"id":"use-cases/contract_enforced_execution","title":"Contract enforced execution","description":"Sensitive tasks may only run on agents that signed an explicit contract. The"},"use-cases/distributed_teamwork":{"id":"use-cases/distributed_teamwork","title":"Distributed Teamwork Example","description":"Teams of agents can now collaborate on a shared goal. After creating a coalition you can assign subtasks via the CLI:"},"use-cases/efficient_team_assignment":{"id":"use-cases/efficient_team_assignment","title":"Efficient Team Assignment","description":"When creating coalitions the dispatcher can now choose workers based on their"},"use-cases/examples":{"id":"use-cases/examples","title":"Anwendungsbeispiele","description":"1. Textgenerierung"},"use-cases/interactive_session":{"id":"use-cases/interactive_session","title":"Interactive Session","description":"An interactive writer can ask a critic for live feedback. The writer sends its"},"use-cases/learning_agents":{"id":"use-cases/learning_agents","title":"Learning Agents","description":"Agents may unlock new abilities by completing training paths. A critic agent can for example become a reviewer after finishing the corresponding path and receiving a positive evaluation from a mentor."},"use-cases/liability_compliance":{"id":"use-cases/liability_compliance","title":"Liability and Compliance","description":"Bei medizinischen Berichten muss nachvollziehbar sein, welcher Agent welche Daten"},"use-cases/multi-agent":{"id":"use-cases/multi-agent","title":"Retrieval-Augmented Generation","description":"With the coordination service a task can be solved by multiple workers. The dispatcher sends the same request to a retriever and a writer agent. The retriever searches the vector store while the writer uses the documents to craft a final answer via the LLM gateway."},"use-cases/privacy_preserving_tasks":{"id":"use-cases/privacy_preserving_tasks","title":"Privacy Preserving Tasks","description":"Ein typisches Szenario ist die Analyse eines Patientenberichts. Der Dispatcher filtert alle Daten oberhalb des im Vertrag festgelegten Zugriffsniveaus. So kann ein Agent nur die für ihn freigegebenen Informationen sehen."},"use-cases/progressive_agent_specialization":{"id":"use-cases/progressive_agent_specialization","title":"Progressive Agent Specialization","description":"Career tracks allow agents to gradually obtain more responsibilities."},"use-cases/project_based_learning":{"id":"use-cases/project_based_learning","title":"Project Based Learning","description":"A mission can guide an agent through a small project. Each step defines a role"},"use-cases/role_limited_task_execution":{"id":"use-cases/role_limited_task_execution","title":"Role limited task execution","description":"A critic agent is restricted to 1000 tokens. When the dispatcher forwards a task"},"use-cases/role_restricted_tasks":{"id":"use-cases/role_restricted_tasks","title":"Role Restricted Tasks","description":"Some tasks contain sensitive data that should only be visible to certain agent roles. Input fields in a TaskContext may specify permissions with a list of allowed roles. When the dispatcher forwards the task to a worker, unauthorized fields are redacted. A reviewer, for example, can see the task description but not the confidential attachments which are only visible to writers."},"use-cases/signed_agent_decisions":{"id":"use-cases/signed_agent_decisions","title":"Signed Agent Decisions","description":"In regulierten Umgebungen muss bewiesen werden können, welche"},"use-cases/skill_matched_execution":{"id":"use-cases/skill_matched_execution","title":"Skill matched execution","description":"Certain tasks require specialised knowledge. By declaring required skills when"},"use-cases/time_constrained_tasks":{"id":"use-cases/time_constrained_tasks","title":"Zeitkritische Aufgaben","description":"Ein Dispatcher mit Warteschlange kann Aufgaben nach Deadlines sortieren."},"use-cases/trust_driven_authorization":{"id":"use-cases/trust_driven_authorization","title":"Trust Driven Authorization","description":"An agent may earn additional privileges when its trust score rises. After ten successful retrieval tasks a retriever could become an analyst."},"use-cases/voting":{"id":"use-cases/voting","title":"Voting Use Case","description":"A simple brainstorming session can make use of the voting mode."},"Wiki/Finanzierung/Budget&Ressourcen":{"id":"Wiki/Finanzierung/Budget&Ressourcen","title":"Agent-NN: Budget und Ressourcen","description":"7.1 Personalressourcen"},"Wiki/Finanzierung/Budgetplanung&Meilensteinen":{"id":"Wiki/Finanzierung/Budgetplanung&Meilensteinen","title":"Agent-NN: Budgetplanung mit Meilensteinen","description":"Gesamtbudget: 336.112 €"}}}}