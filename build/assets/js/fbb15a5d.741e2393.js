"use strict";(self.webpackChunkagent_nn_docs=self.webpackChunkagent_nn_docs||[]).push([[7449],{3023:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(3696);const r={},c=s.createContext(r);function i(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(c.Provider,{value:n},e.children)}},4671:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/dispatcher","title":"Task Dispatcher API","description":"POST /task","source":"@site/docs/api/dispatcher.md","sourceDirName":"api","slug":"/api/dispatcher","permalink":"/Agent-NN/api/dispatcher","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(2540),c=t(3023);const i={},a="Task Dispatcher API",o={},d=[{value:"Beispiel",id:"beispiel",level:3}];function p(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"task-dispatcher-api",children:"Task Dispatcher API"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST /task"}),"\n: Accepts a task with ",(0,r.jsx)(n.code,{children:"task_type"}),", ",(0,r.jsx)(n.code,{children:"input"})," and optional ",(0,r.jsx)(n.code,{children:"session_id"}),".\nThe dispatcher looks up the session context, selects a worker via the\nAgent Registry and returns the worker response."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET /health"}),"\n: Simple health check returning ",(0,r.jsx)(n.code,{children:'{"status": "ok"}'}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"beispiel",children:"Beispiel"}),"\n",(0,r.jsx)(n.p,{children:"Request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8000/task \\\n     -H "Content-Type: application/json" \\\n     -d \'{"task_type": "chat", "input": "Hello"}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"Response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "result": "Hi there!",\n    "worker": "worker_dev"\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);