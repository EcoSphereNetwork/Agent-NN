"use strict";(self.webpackChunkagent_nn_docs=self.webpackChunkagent_nn_docs||[]).push([[4418],{3023:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(3696);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},9997:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reasoning","title":"Context Reasoning","description":"The reasoning framework collects partial results from multiple agents and derives","source":"@site/docs/reasoning.md","sourceDirName":".","slug":"/reasoning","permalink":"/Agent-NN/reasoning","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(2540),o=t(3023);const a={},i="Context Reasoning",c={},d=[{value:"Strategies",id:"strategies",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"context-reasoning",children:"Context Reasoning"})}),"\n",(0,r.jsxs)(n.p,{children:["The reasoning framework collects partial results from multiple agents and derives\nan aggregated decision. Steps are registered via ",(0,r.jsx)(n.code,{children:"add_step()"})," and finally\nevaluated by calling ",(0,r.jsx)(n.code,{children:"decide()"})," on the selected strategy."]}),"\n",(0,r.jsx)(n.h2,{id:"strategies",children:"Strategies"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MajorityVoteReasoner"})," \u2013 sums up the scores of identical results and returns\nthe most popular answer."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from agentnn.reasoning import MajorityVoteReasoner\n\nreasoner = MajorityVoteReasoner()\nreasoner.add_step("a1", "yes", 0.8)\nreasoner.add_step("a2", "no", 0.5)\nreasoner.add_step("a3", "yes")\nassert reasoner.decide() == "yes"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);