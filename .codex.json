{
    "project": "Agent-NN MCP Modernization",
    "objective": "Schrittweise Umstellung auf eine Modular Control Plane Architektur",
    "model": "gpt-4",
    "approvalMode": "full-auto",
    "fullAutoErrorMode": "ignore-and-continue",
    "notify": false,
    "phases": [
        {
            "name": "Phase 1: Codebase-Konsolidierung & Architektur-Refaktor",
            "description": "Grundlegende MCP-Services aufsetzen und Legacy-Code migrieren.",
            "tasks": [
                {
                    "id": "P1T1",
                    "description": "Legacy-Code in archive verschieben und Struktur vorbereiten.",
                },
                {"id": "P1T2", "description": "ModelContext-Datentyp definieren."},
                {
                    "id": "P1T3",
                    "description": "Grundservices als Microservices anlegen.",
                },
                {
                    "id": "P1T4",
                    "description": "Docker-Compose für alle Dienste einrichten.",
                },
                {
                    "id": "P1T5",
                    "description": "Ersten End-to-End-Test über alle Services.",
                },
                {"id": "P1T6", "description": "MCP-SDK integrieren und Basis-Routing."},
                {"id": "P1T7", "description": "LLM-Gateway-Anbindung umsetzen."},
                {"id": "P1T8", "description": "VectorStore-Service integrieren."},
                {
                    "id": "P1T9",
                    "description": "Session-Manager mit persistentem Kontext.",
                },
                {
                    "id": "P1T10",
                    "description": "Monitoring- und Logging-Infrastruktur einführen.",
                },
                {"id": "P1T11", "description": "Sicherheits-Layer implementieren."},
                {
                    "id": "P1T12",
                    "description": "Persistente Speicherpfade und Konfiguration festlegen.",
                },
                {"id": "P1T13", "description": "Developer-SDK und CLI bereitstellen."},
                {"id": "P1T14", "description": "Erste Beta-Release vorbereiten."},
            ],
            "exitCriteria": "Ein einfacher End-to-End-Test läuft über die neuen Services.",
        },
        {
            "name": "Phase 2: Feature-Integration & Harmonisierung",
            "description": "Meta-Learning aktivieren und Alt-Funktionen migrieren.",
            "tasks": [
                {"id": "P2T1", "description": "MetaLearner aktivieren."},
                {
                    "id": "P2T2",
                    "description": "AutoTrainer und Feedback-Schleife implementieren.",
                },
                {
                    "id": "P2T3",
                    "description": "Capability-basiertes Routing prototypisieren.",
                },
                {"id": "P2T4", "description": "Evaluationsmetriken sammeln."},
                {"id": "P2T5", "description": "Provider-System erweitern."},
                {
                    "id": "P2T6",
                    "description": "Dynamische Konfiguration über llm_config.yaml.",
                },
                {"id": "P2T7", "description": "SDK-Beispiele und Tests hinzufügen."},
                {"id": "P2T8", "description": "Bestehende Funktionen angleichen."},
                {
                    "id": "P2T9",
                    "description": "Konsistenz und Abwärtskompatibilität prüfen.",
                },
                {"id": "P2T10", "description": "Legacy-Code schrittweise stilllegen."},
            ],
            "exitCriteria": "Mindestens ein Agent nutzt das neue Lernmodell erfolgreich.",
        },
        {
            "name": "Phase 3: Konsolidiertes Frontend & User Experience",
            "description": "Frontend vervollständigen und Nutzererlebnis optimieren.",
            "tasks": [
                {
                    "id": "P3T1",
                    "description": "Alle UI-Seiten und Panels fertigstellen.",
                },
                {"id": "P3T2", "description": "Frontend mit Backend-APIs verbinden."},
                {
                    "id": "P3T3",
                    "description": "Einheitliche Benutzeroberfläche konsolidieren.",
                },
                {"id": "P3T4", "description": "Authentifizierungs-Flow verbessern."},
                {"id": "P3T5", "description": "Fehlerbehandlung und Ladeindikatoren."},
                {
                    "id": "P3T6",
                    "description": "Responsive Design und Dark-Mode sicherstellen.",
                },
                {"id": "P3T7", "description": "Zugänglichkeit erhöhen."},
                {
                    "id": "P3T8",
                    "description": "Formularvalidierung und Usability verbessern.",
                },
                {"id": "P3T9", "description": "Optionale erweiterte UI-Funktionen."},
            ],
            "exitCriteria": "Alle Panels nutzen echte APIs und die UI ist responsiv.",
        },
        {
            "name": "Phase 4: Testabdeckung, CI/CD und Dokumentation",
            "description": "Projekt finalisieren und Release vorbereiten.",
            "tasks": [
                {"id": "P4T1", "description": "Umfassende Test-Suite entwickeln."},
                {"id": "P4T2", "description": "Regressionsprüfung und Bugfixing."},
                {"id": "P4T3", "description": "Continuous Integration einrichten."},
                {"id": "P4T4", "description": "Qualitätsmetriken beobachten."},
                {"id": "P4T5", "description": "Deployment-Skripte finalisieren."},
                {"id": "P4T6", "description": "Dokumentation aktualisieren."},
                {"id": "P4T7", "description": "SDK- und API-Dokumentation ergänzen."},
                {"id": "P4T8", "description": "Abschließender Usability-Test."},
                {"id": "P4T9", "description": "Release-Vorbereitung."},
                {"id": "P4T10", "description": "Legacy-Code endgültig archivieren."},
            ],
            "exitCriteria": "Tests bestehen und Doku beschreibt die produktionsreife MCP-Architektur.",
        },
    ],
    "autoPhaseSwitch": true,
    "progressLog": "codex_progress.log",
    "phase-1-security-layer": true,
    "phase-1-persistence": true,
    "phase-1-sdk": true,
    "phase-1-release": true,
    "phase-1.2-service-routing": true,
    "phase-1.3-api-gateway": true,
    "codex/phase-1-mlflow-integration": true,
    "codex/phase-1-release-final-part1": true,
    "codex/phase-1-release-final-structure-clean": true,
    "codex/phase-1-release-final-packaging": true,
    "codex/phase-1-release-final-docs": true,
    "codex/phase-2-multi-agent-core": true,
    "codex/phase-2-agent-voting-feedback": true,
    "codex/phase-2-agent-memory-sharing": true,
    "codex/phase-2-agent-communication": true,
    "codex/phase-2-agent-identity": true,
    "codex/phase-2-agent-evolution": true,
    "codex/phase-2-agent-coalition": true,
    "codex/phase-2-agent-economy": true,
    "codex/phase-2-agent-budgeting": true,
    "codex/phase-2-dispatch-queue": true,
    "codex/phase-3-governance-contracts": true,
    "codex/phase-3-agent-privacy": true,
    "codex/phase-3-agent-auditlog": true,
    "codex/phase-3-agent-signatures": true,
    "codex/phase-3-agent-access-control": true,
    "codex/phase-3-dynamic-role-escalation": true,
    "codex/phase-3-role-resource-limits": true,
    "codex/phase-3-skill-certification": true,
    "codex/phase-3-agent-learning": true,
    "codex/phase-3-agent-career-tracks": true,
    "codex/phase-4-agent-network": true,
    "codex/phase-4-agent-missions": true,
    "codex/phase-4-agent-reputation": true,
    "codex/phase-4-agent-trust-network": true,
    "codex/phase-4-agent-delegation": true,
    "codex/phase-4-agent-feedback-loop": true,
    "phase/2.1-dynamic-routing-metabase": true,
    "phase/2.2-openhands-execution": true,
    "phase-1.4-observability-logging": true,
    "phase/1.final-core-consistency": true,
    "phase/2.3-system-harmonization": true,
    "phase/2.5-feedback-autotrainer": true
}
